#Prevent server config files from being saved inside the current world directory. Instead, save them to the global config directory in .minecraft/config/.
#This option effectively disables per world server configs, but helps a lot with avoiding user confusion.
forceGlobalServerConfigs = false
#Config loading from a file config appears to occasionally fail and throw a com.electronwill.nightconfig.core.io.ParsingException: Not enough data available.
#This workaround catches the exception, and recreates a fresh file to try config loading for again. If loading fails for the new file the original exception is thrown.
#To make sure any required changes through configs stay intact through such recreations, placed your changed configs in the 'defaultconfigs' directory.
#Applying this workaround is unfortunately not possible on a libary level due to limitations imposed by the Forge Mod Loader.
#Therefore Night Config Fixes offers two different modes to apply its workaround. Simply test which one works best for you, although the more likely one is selected by default.
#Note that the more intrusive mode 'WRAP_MOD_CONFIGS' also fixes a different oversight in Forge's config system:
#When single config values need to be corrected (think like the config value is a number 1-10, but the user enters an incompatible input like '5a', in that case only this single value needs fixing not the whole file).
#Forge restores the built-in default value for that option, but ignores a value that is set in a possibly present default config in 'defaultconfigs'.
#This option fixes this behavior and checks for a value in a default config from 'defaultconfigs' before falling back to the built-in default.
#Allowed Values: NEVER, REPLACE_CONFIG_HANDLER, WRAP_MOD_CONFIGS
recreateConfigsWhenParsingFails = "REPLACE_CONFIG_HANDLER"
